parameters:
    level: 5
    paths:
        - app

    ignoreErrors:
        # Métodos definidos por traits de Spatie Permission
        - '#Call to an undefined method [a-zA-Z0-9\\_]+::hasPermission\(\)#'
        - '#Call to an undefined method [a-zA-Z0-9\\_]+::hasAnyRole\(\)#'
        - '#Call to an undefined method [a-zA-Z0-9\\_]+::hasRole\(\)#'
        - '#Call to an undefined method [a-zA-Z0-9\\_]+::assignRole\(\)#'
        - '#Call to an undefined method [a-zA-Z0-9\\_]+::syncRoles\(\)#'
        - '#Call to an undefined method [a-zA-Z0-9\\_]+::givePermissionTo\(\)#'
        - '#Call to an undefined method [a-zA-Z0-9\\_]+::can\(\)#'

        # Métodos del helper auth() y User model
        - '#Call to an undefined method Illuminate\\Contracts\\Auth\\Authenticatable::id\(\)#'
        - '#Call to an undefined method Illuminate\\Contracts\\Auth\\Authenticatable::user\(\)#'
        - '#Call to an undefined method Illuminate\\Contracts\\Auth\\Authenticatable::roles\(\)#'
        - '#Call to an undefined method Illuminate\\Contracts\\Auth\\Authenticatable::can\(\)#'
        - '#Call to an undefined method Illuminate\\Contracts\\Auth\\Guard::id\(\)#'
        - '#Call to an undefined method Illuminate\\Contracts\\Auth\\Guard::user\(\)#'
        - '#Call to an undefined method Illuminate\\Contracts\\Auth\\Guard::can\(\)#'
        - '#Undefined method .+::hasPermission\(\)#'
        - '#Undefined method .+::user\(\)#'
        - '#Undefined method .+::id\(\)#'
        - '#Undefined method .+::can\(\)#'

        # Métodos de relaciones Eloquent dinámicas
        - '#Call to an undefined method Illuminate\\Database\\Eloquent\\Builder::[a-zA-Z0-9]+\(\)#'

        # Múltiples returns en controllers con try-catch (arquitectura estándar Laravel)
        # Es una buena práctica tener try-catch con múltiples tipos de excepciones
        - '#This method has [4-5] returns, which is more than the 3 allowed#'
